{
  "hash": "6b2ef1dca124b46bfbbc6cfc998afcbd",
  "result": {
    "engine": "knitr",
    "markdown": "# Accessing and using the distribution models\n\n## Explore through the map platform\n\nTo be updated\n\n## Download to analyze locally\n\n### Downloading the data\n\nPredictions and the raw (quality-controlled) data, as well as additional files (e.g. model metrics) are available through both the mapping platform and AWS S3.\n\nTo explore the files available, go to https://mpaeu-dist.s3.amazonaws.com/index.html\n\n**Download a specific file**\n\nIf you want to download only a specific file, you can use the [explorer](https://mpaeu-dist.s3.amazonaws.com/index.html) to locate the file and then click on it to download.\n\n**Download complete species folders**\n\nTo download a specific folder, the best way is to use the `aws` CLI program ([see here](https://aws.amazon.com/cli/)). For example, if we want to download data for the species _Echinus esculentus_, we need only its AphiaID, which you can find on [WoRMS](https://www.marinespecies.org/). In this case the AphiaID is **124287** Then, from the command line we can do:\n\n``` bash\naws s3 sync s3://mpaeu-dist/results/species/taxonid=124287 ./your-folder --no-sign-request\n```\n\nNote that the bucket is organized this way:\n\n```\n├── index.html\n├── results                    : All distribution modelling results for the MPA Europe project\n│   ├── species                : Species Distribution Modelling results\n│   │   ├── ...\n│   │   └── taxonid=[AphiaID]  : Data for each species\n│   │\n│   ├── habitat                : Habitat Distribution Modelling results\n│   └── diversity              : Diversity maps and analyses\n│\n└── source                     : Additional data necessary for running the models, not possible to store on GitHub\n```\n\nAnd thus for accessing any species folder you just need:\n\n`s3://bucket-name/subfolder/` + the AphiaID of the species\n\nIt is also possible to do this operation through R using the `aws.s3` package:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"aws.s3\")\n\n# Sync the contents of an S3 bucket subfolder to your local folder\ns3sync(\n  bucket = \"bucket-name\", \n  prefix = \"results/species/taxonid=124287\",         # Subfolder in the bucket\n  save_to = \"./your-folder\",                        # Local folder\n  region = \"\",              # Region can be left empty for public buckets\n  use_https = TRUE # This is equivalent to \"--no-sign-request\"\n)\n```\n:::\n\n\n\n\n\n\n### Data structure\n\nOutputs from WP3 (Biodiversity modelling) always follow the same standard structure. File names will always contain at least two components:\n\n`taxonid=[AphiaID]`: identify the taxon\n`model=[Model run acronym]`: identify the modelling exercise\n\nAdditional information also follow a similar syntax (inspired on the hive format) and is identified by \"[the parameter]=[the value]\". For example, a prediction file for a species will look like this:\n\n`taxonid=135185_model=mpaeu_method=maxent_scen=ssp126_dec100_cog.tif`\n\n`method` is the algorithm used for the model and `scen` the scenario and period of the prediction. In this case `_cog` simply indicates that the output is COG optimized.\n\nA species folder have the following structure:\n\n```\n├── figures                    : Plots for quick exploration of results\n├── metrics                    : All metrics and additional information (e.g. CV metrics, response curves, etc.)\n├── models                     : RDS files containing the fitted models, ready for predicting in new data\n├── predictions                : The TIF files with predictions\n│\n├── ..._what=fitocc.parquet    : Occurrence points used to fit the model\n└── ..._what=log.json          : The log file containing all model fit details\n```\n\nWe will see the folder `metrics` and `predictions` in more details, but first it is essential to understand the file `..what=log.json`.\n\n#### Understanding the log file\n\nThe log file contains all details about the model fitting, including best parameters of model tuning. It is rich document that enable easier reproduction of the results obtained. Here is a sample log file for the species with AphiaID 13185 (`taxonid=135185_model=mpaeu_what=log.json`):\n\n\n\n\n\n\n\n```{=html}\n<div class=\"jsonedit html-widget html-fill-item\" id=\"htmlwidget-711e2b3a881553b2d21f\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-711e2b3a881553b2d21f\">{\"x\":{\"data\":{\"taxonID\":[135185],\"scientificName\":[\"Dendrophyllia cornigera\"],\"group\":[\"others\"],\"model_date\":[\"2024-08-14\"],\"model_acro\":[\"mpaeu\"],\"n_init_points\":[80],\"model_fit_points\":[80],\"model_eval_points\":[0],\"algorithms\":[\"maxent\",\"rf\",\"xgboost\"],\"algorithms_parameters\":{\"maxent\":{\"features\":[\"lq\"],\"remult\":[0.5,1,1.5,2]},\"rf\":{\"n_trees\":[500],\"mtry\":[\"default\",\"double\",\"total\"],\"method\":[\"classification\"],\"type\":[\"down-sampled\"]},\"xgboost\":{\"shrinkage\":[0.1,0.3],\"gamma\":[0,4],\"depth\":[3,5],\"rounds\":[10,50,100],\"scale_pos_weight\":[1]}},\"model_result\":{\"maxent\":[\"succeeded\"],\"rf\":[\"succeeded\"],\"xgboost\":[\"succeeded\"],\"ensemble\":[\"succeeded\"]},\"model_bestparams\":{\"maxent\":[{\"remult\":1.5,\"features\":\"lq\"}],\"rf\":{\"n_trees\":[500],\"mtry\":[\"default\"],\"method\":[\"classification\"],\"type\":[\"down-sampled\"]},\"xgboost\":{\"depth\":[3],\"gamma\":[0],\"scale_pos_weight\":[1],\"rounds\":[100],\"shrinkage\":[0.3],\"objective\":[\"binary:logistic\"]}},\"model_details\":{\"ecoregions\":[3,5,18,21],\"ecoregions_included\":[3,5,18,21],\"limited_by_depth\":[true],\"depth_buffer\":[100],\"block_size\":[17.7824],\"background_size\":[10000],\"control_bias\":{},\"hypothesis_tested\":{\"basevars\":[\"thetao_mean\",\"thetao_range\",\"bathymetry_mean\",\"distcoast\",\"sws_max\",\"so_mean\",\"o2_mean\"],\"complexity\":[\"thetao_mean\",\"thetao_range\",\"bathymetry_mean\",\"distcoast\",\"sws_max\",\"so_mean\",\"o2_mean\",\"rugosity\"]},\"best_hypothesis\":[\"complexity\"],\"variables\":[\"thetao_mean\",\"thetao_range\",\"bathymetry_mean\",\"distcoast\",\"sws_max\",\"so_mean\",\"o2_mean\",\"rugosity\"]},\"model_good\":[\"maxent\",\"rf\"],\"model_good_metric\":[\"cbi\"],\"model_good_threshold\":[0.3],\"model_posteval\":{\"maxent\":{\"thermal_range\":[-0.7467,0.3295,7.7113,20.3575,28.1484],\"thermal_range_binary\":[6.4337,7.8512,12.1886,16.7314,19.3186],\"thermal_envelope\":[{\"status\":\"inside_tenv\",\"frequency\":117175,\"percentage\":100}]},\"rf\":{\"thermal_range\":[-0.7467,0.3295,7.7113,20.3575,28.1484],\"thermal_range_binary\":[10.5027,11.309,13.038,15.1007,16.8277],\"thermal_envelope\":[{\"status\":\"inside_tenv\",\"frequency\":2763,\"percentage\":100}]},\"xgboost\":{},\"ensemble\":{\"thermal_range\":[-0.7467,0.3295,7.7113,20.3575,28.1484],\"thermal_range_binary\":[8.914,10.1016,13.224,17.4058,19.4388],\"thermal_envelope\":[{\"status\":\"inside_tenv\",\"frequency\":22482,\"percentage\":100}]},\"niche\":[{\"model\":\"ensemble\",\"D\":0.6194,\"I\":0.755},{\"model\":\"maxent\",\"D\":0.63,\"I\":0.7658},{\"model\":\"rf\",\"D\":0.4792,\"I\":0.6342}],\"hyperniche\":[{\"hyperniche_jaccard\":0.5525,\"hyperniche_sorensen\":0.7117,\"hyperniche_frac_unique_1\":0.1283,\"hyperniche_frac_unique_2\":0.3986,\"model\":\"maxent\"},{\"hyperniche_jaccard\":0.3962,\"hyperniche_sorensen\":0.5676,\"hyperniche_frac_unique_1\":0.09619999999999999,\"hyperniche_frac_unique_2\":0.5863,\"model\":\"rf\"},{\"hyperniche_jaccard\":0.246,\"hyperniche_sorensen\":0.3949,\"hyperniche_frac_unique_1\":0.1478,\"hyperniche_frac_unique_2\":0.743,\"model\":\"ensemble\"}]},\"other_details\":{},\"timings\":[{\"what\":\"Species data loading\",\"time_mins\":0.0007},{\"what\":\"Data loading\",\"time_mins\":0.0024},{\"what\":\"Data preparing\",\"time_mins\":0.4211},{\"what\":\"Sample bias assessment\",\"time_mins\":0.605},{\"what\":\"Model selection\",\"time_mins\":0.8766},{\"what\":\"Model fit\",\"time_mins\":2.9968},{\"what\":\"Model prediction\",\"time_mins\":63.1144},{\"what\":\"Response curves\",\"time_mins\":63.2407},{\"what\":\"Variable importance\",\"time_mins\":63.5231},{\"what\":\"Ensemble\",\"time_mins\":66.4181},{\"what\":\"Masks\",\"time_mins\":67.06319999999999},{\"what\":\"Post-evaluation\",\"time_mins\":71.6979}],\"obissdm_version\":[\"0.3.0\"]},\"options\":{\"mode\":\"tree\",\"modes\":[\"text\",\"tree\",\"table\"]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n\n\n\n\n\n<br>\nYou can open this file in any text editor in your computer, or through R using for example the `jsonlite::read_json()`. The package `obissdm` contains the function `view_log` to help visualize those files.\n\nEach parameter is explained below:\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"jsonedit html-widget html-fill-item\" id=\"htmlwidget-5b199fe727add6f66e04\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-5b199fe727add6f66e04\">{\"x\":{\"data\":{\"taxonID\":[\"WoRMS AphiaID for the species\"],\"scientificName\":[\"Scientific name of the species\"],\"group\":[\"The group assigned by MPA Europe to this species (e.g. mammals)\"],\"hab_depth\":[\"The species position on the column of water, i.e. if benthic or pelagic\"],\"model_date\":[\"The date in which the species was modelled\"],\"model_acro\":[\"An unique identifier of the modelling exercise\"],\"n_init_points\":[\"Number of quality-controlled occurrence points available for model fitting. Note that other filters are applied.\"],\"model_fit_points\":[\"Number of occurrence points used for model fitting after filters.\"],\"model_eval_points\":[\"Number of occurrence points set aside for model evaluation (independent of cross-validation).\"],\"algorithms\":[\"Name of algorithms used for modeling.\"],\"algorithms_parameters\":[\"Parameters used in model tuning. Any parameter with more than 1 value is tuned through cross-validation.\"],\"model_result\":[\"If model succeeded for that particular method.\"],\"model_bestparams\":[\"The best parameters used to train final model according to tuning.\"],\"model_details\":{\"ecoregions\":[\"Realms from Costello et al. 2017 used for defining 'native' areas\"],\"ecoregions_included\":[\"Realms considering a small buffer around occurrence records. This is used for model fitting.\"],\"limited_by_depth\":[\"TRUE if a depth limiting was applied (removing areas beyond the maximum depth where species was recorded, plus the `depth_buffer`)\"],\"depth_buffer\":[\"Buffer applied to the maximum depth where the species was recorded.\"],\"block_size\":[\"Size used for the cross-validation spatial blocks.\"],\"background_size\":[\"Number of points used as quadrature/background points.\"],\"control_bias\":[\"Details of the spatial bias control applied, if any.\"],\"hypothesis_tested\":[\"Hypothesis (sets of environmental variables) tested\"],\"best_hypothesis\":[\"Best hypothesis selected\"],\"variables\":[\"Variables from the best hypothesis\"]},\"model_good\":[\"Models that performed well according to metric\"],\"model_good_metric\":[\"Metric used to assess model quality\"],\"model_good_threshold\":[\"Value used as a threshold to define a good model.\"],\"model_posteval\":{\"model_name\":[\"Post-evaluation considering SST limits and overlap for each model technique\"],\"niche\":[\"Niche equivalency tests considering occurrence records and a sample of the predicted suitability (see ecospat::ecospat.niche.equivalency.test).\"],\"hyperniche\":[\"Tests overlap between real occurrence records and a sample of predicted suitability on the environmental space using hypervolume\"]},\"model_uncertainty\":{\"bootstrap_status\":[\"If bootstrap was done for this species\"],\"bootstrap_iterations\":[\"Number of iterations used for bootstraping\"],\"bootstrap_models\":[\"Which models were bootstraped\"],\"bootstrap_max_n\":[\"In some cases, if many records are available, to reduce the bootstrap time we reduce the maximum number of records of either the quadrature, the records, or both.\"]},\"other_details\":[\"Additional details about the model\"],\"timings\":[\"Timings, in minutes, for each model step.\"],\"obissdm_version\":[\"Version of the `obissdm` package, which was created specifically to this framework (see https://github.com/iobis/mpaeu_msdm)\"]},\"options\":{\"mode\":\"tree\",\"modes\":[\"text\",\"tree\",\"table\"]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n\n<br>\n\n#### The metrics folder\n\nThis is an example of the content of a metrics folder:\n\n```\n\"taxonid=[AphiaID]_model=[model-acronym]_method=ensemble_what=cvmetrics.parquet\"                 \"taxonid=[AphiaID]_model=[model-acronym]_method=ensemble_what=respcurves.parquet\"               \n\"taxonid=[AphiaID]_model=[model-acronym]_method=ensemble_what=varimportance.parquet\"             \"taxonid=[AphiaID]_model=[model-acronym]_method=maxent_what=cvmetrics.parquet\"                  \n\"taxonid=[AphiaID]_model=[model-acronym]_method=maxent_what=fullmetrics.parquet\"                 \"taxonid=[AphiaID]_model=[model-acronym]_method=maxent_what=respcurves.parquet\"                 \n\"taxonid=[AphiaID]_model=[model-acronym]_method=maxent_what=varimportance.parquet\"               \"taxonid=[AphiaID]_model=[model-acronym]_method=rf_classification_ds_what=cvmetrics.parquet\"    \n\"taxonid=[AphiaID]_model=[model-acronym]_method=rf_classification_ds_what=fullmetrics.parquet\"   \"taxonid=[AphiaID]_model=[model-acronym]_method=rf_classification_ds_what=respcurves.parquet\"   \n\"taxonid=[AphiaID]_model=[model-acronym]_method=rf_classification_ds_what=varimportance.parquet\" \"taxonid=[AphiaID]_model=[model-acronym]_method=xgboost_what=cvmetrics.parquet\"                 \n\"taxonid=[AphiaID]_model=[model-acronym]_method=xgboost_what=fullmetrics.parquet\"                \"taxonid=[AphiaID]_model=[model-acronym]_method=xgboost_what=respcurves.parquet\"                \n\"taxonid=[AphiaID]_model=[model-acronym]_method=xgboost_what=varimportance.parquet\"              \"taxonid=[AphiaID]_model=[model-acronym]_what=biasmetrics.rds\"                                  \n\"taxonid=[AphiaID]_model=[model-acronym]_what=posteval_hyperniche.parquet\"                       \"taxonid=[AphiaID]_model=[model-acronym]_what=thermmetrics.json\"                                \n\"taxonid=[AphiaID]_model=[model-acronym]_what=thresholds.parquet\"                               \n```\n\nThere are many files available, but some are just the same for different methods. The unique types of files are:\n\n1. `..._what=cvmetrics.parquet`: cross-validation metrics for the model\n2. `..._what=varimportance.parquet`: variables importance\n3. `..._what=fullmetrics.parquet\"`: metrics for the full model\n4. `..._what=respcurves.parquet\"`: partial response curves for each variable\n5. `..._what=thresholds.parquet`: thresholds that can be used to \n6. `..._what=biasmetrics.rds`: an RDS file with metrics of data spatial bias\n7. `..._what=posteval_hyperniche.parquet`: post-evaluation metrics for the hyperniche model\n8. `..._what=thermmetrics.json`: thermal metrics\n\n::: {.callout-note}\nMost files are in parquet format, which is a very efficient [storage format](https://resources.obis.org/tutorials/arrow-obis/). The easiest way to work with this type of data is through R, using the arrow package: `arrow::open_dataset(\"parquet-file.parquet\")`. This will open a data.frame (`tibble`) that you can use as usual. If you don't know R or any other programming language, then you can use an extension ([on Google Drive, for example](https://workspace.google.com/marketplace/app/tab_lab_csv_and_parquet_viewer_and_graph/91285510383)) or you can download the specific file you need in `csv` format using [this tool](https://shiny.obis.org/mpaeutools).\n:::\n\nTwo files are specially important: the `cvmetrics` which contain the metrics to assess the model predictive capacity, and `thresholds` which contains the values necessary for converting the predictions into binary format (if necessary). See the section \"Analyzing the data\" to understand more about the content of these files.\n\n#### The predictions folder\n\nThis is an example of the content of a predictions folder:\n\n```\n[1] \"taxonid=[AphiaID]_model=[model-acronym]_mask_cog.tif\"                                           \"taxonid=[AphiaID]_model=[model-acronym]_method=ensemble_scen=current_cog.tif\"                  \n [3] \"taxonid=[AphiaID]_model=[model-acronym]_method=ensemble_scen=current_what=boot_cog.tif\"         \"taxonid=[AphiaID]_model=[model-acronym]_method=ensemble_scen=ssp126_dec100_cog.tif\"            \n [5] \"taxonid=[AphiaID]_model=[model-acronym]_method=ensemble_scen=ssp126_dec50_cog.tif\"              \"taxonid=[AphiaID]_model=[model-acronym]_method=ensemble_scen=ssp245_dec100_cog.tif\"            \n [7] \"taxonid=[AphiaID]_model=[model-acronym]_method=ensemble_scen=ssp245_dec50_cog.tif\"              \"taxonid=[AphiaID]_model=[model-acronym]_method=ensemble_scen=ssp370_dec100_cog.tif\"            \n [9] \"taxonid=[AphiaID]_model=[model-acronym]_method=ensemble_scen=ssp370_dec50_cog.tif\"              \"taxonid=[AphiaID]_model=[model-acronym]_method=ensemble_scen=ssp460_dec100_cog.tif\"            \n[11] \"taxonid=[AphiaID]_model=[model-acronym]_method=ensemble_scen=ssp460_dec50_cog.tif\"              \"taxonid=[AphiaID]_model=[model-acronym]_method=ensemble_scen=ssp585_dec100_cog.tif\"            \n[13] \"taxonid=[AphiaID]_model=[model-acronym]_method=ensemble_scen=ssp585_dec50_cog.tif\"              \"taxonid=[AphiaID]_model=[model-acronym]_method=maxent_scen=current_cog.tif\"                    \n[15] \"taxonid=[AphiaID]_model=[model-acronym]_method=maxent_scen=ssp126_dec100_cog.tif\"               \"taxonid=[AphiaID]_model=[model-acronym]_method=maxent_scen=ssp126_dec50_cog.tif\"               \n[17] \"taxonid=[AphiaID]_model=[model-acronym]_method=maxent_scen=ssp245_dec100_cog.tif\"               \"taxonid=[AphiaID]_model=[model-acronym]_method=maxent_scen=ssp245_dec50_cog.tif\"               \n[19] \"taxonid=[AphiaID]_model=[model-acronym]_method=maxent_scen=ssp370_dec100_cog.tif\"               \"taxonid=[AphiaID]_model=[model-acronym]_method=maxent_scen=ssp370_dec50_cog.tif\"               \n[21] \"taxonid=[AphiaID]_model=[model-acronym]_method=maxent_scen=ssp460_dec100_cog.tif\"               \"taxonid=[AphiaID]_model=[model-acronym]_method=maxent_scen=ssp460_dec50_cog.tif\"               \n[23] \"taxonid=[AphiaID]_model=[model-acronym]_method=maxent_scen=ssp585_dec100_cog.tif\"               \"taxonid=[AphiaID]_model=[model-acronym]_method=maxent_scen=ssp585_dec50_cog.tif\"               \n[25] \"taxonid=[AphiaID]_model=[model-acronym]_method=rf_classification_ds_scen=current_cog.tif\"       \"taxonid=[AphiaID]_model=[model-acronym]_method=rf_classification_ds_scen=ssp126_dec100_cog.tif\"\n[27] \"taxonid=[AphiaID]_model=[model-acronym]_method=rf_classification_ds_scen=ssp126_dec50_cog.tif\"  \"taxonid=[AphiaID]_model=[model-acronym]_method=rf_classification_ds_scen=ssp245_dec100_cog.tif\"\n[29] \"taxonid=[AphiaID]_model=[model-acronym]_method=rf_classification_ds_scen=ssp245_dec50_cog.tif\"  \"taxonid=[AphiaID]_model=[model-acronym]_method=rf_classification_ds_scen=ssp370_dec100_cog.tif\"\n[31] \"taxonid=[AphiaID]_model=[model-acronym]_method=rf_classification_ds_scen=ssp370_dec50_cog.tif\"  \"taxonid=[AphiaID]_model=[model-acronym]_method=rf_classification_ds_scen=ssp460_dec100_cog.tif\"\n[33] \"taxonid=[AphiaID]_model=[model-acronym]_method=rf_classification_ds_scen=ssp460_dec50_cog.tif\"  \"taxonid=[AphiaID]_model=[model-acronym]_method=rf_classification_ds_scen=ssp585_dec100_cog.tif\"\n[35] \"taxonid=[AphiaID]_model=[model-acronym]_method=rf_classification_ds_scen=ssp585_dec50_cog.tif\"  \"taxonid=[AphiaID]_model=[model-acronym]_method=xgboost_scen=current_cog.tif\"                   \n[37] \"taxonid=[AphiaID]_model=[model-acronym]_method=xgboost_scen=ssp126_dec100_cog.tif\"              \"taxonid=[AphiaID]_model=[model-acronym]_method=xgboost_scen=ssp126_dec50_cog.tif\"              \n[39] \"taxonid=[AphiaID]_model=[model-acronym]_method=xgboost_scen=ssp245_dec100_cog.tif\"              \"taxonid=[AphiaID]_model=[model-acronym]_method=xgboost_scen=ssp245_dec50_cog.tif\"              \n[41] \"taxonid=[AphiaID]_model=[model-acronym]_method=xgboost_scen=ssp370_dec100_cog.tif\"              \"taxonid=[AphiaID]_model=[model-acronym]_method=xgboost_scen=ssp370_dec50_cog.tif\"              \n[43] \"taxonid=[AphiaID]_model=[model-acronym]_method=xgboost_scen=ssp460_dec100_cog.tif\"              \"taxonid=[AphiaID]_model=[model-acronym]_method=xgboost_scen=ssp460_dec50_cog.tif\"              \n[45] \"taxonid=[AphiaID]_model=[model-acronym]_method=xgboost_scen=ssp585_dec100_cog.tif\"              \"taxonid=[AphiaID]_model=[model-acronym]_method=xgboost_scen=ssp585_dec50_cog.tif\"              \n[47] \"taxonid=[AphiaID]_model=[model-acronym]_what=mess_cog.tif\"                                      \"taxonid=[AphiaID]_model=[model-acronym]_what=shape_cog.tif\"                                    \n[49] \"taxonid=[AphiaID]_model=[model-acronym]_what=thermenvelope.parquet\"                            \n```\n\nEven more files available, but again many are just the same for different methods. The unique types of files are:\n\n1. predictions: spatial predictions of models (following the pattern `..._method=[name of algorithm]_scen=[scenario and if applicable period]_cog.tif`)\n2. bootstrap: uncertainty in the models assessed as bootstrap. May not be available to all algorithms. Files follow the same pattern as the predictions, with `what=boot` added.\n3. mask: the file named `_mask_cog.tif` contains the mask to limit predictions to specific areas (e.g. the native areas)\n4. MESS map (uncertainty): the file `_what=mess_cog.tif` contains the MESS analysis, which measures extrapolation\n5. SHAPE map (uncertainty): as MESS, the file `_what=shape_cog.tif` contains the SHAPE analysis which measures extrapolation\n6. Thermal envelopes: the only file that is not a GeoTIFF is the `_what=thermenvelope.parquet`. This is a GeoParquet which contains the shapefiles of thermal envelopes for the species in different scenarios.\n\n## Processing data\n\nYou can analyze the SDM data in the tool you prefer - either through a programming language like R or Python, or using GIS programs like QGIS and ArcGIS. Here we will provide codes examples in R, the language used to produce the models, and also some examples in QGIS.\n\nNote that for working in GIS programs, for some applications you will need to convert the Parquet files to CSV. There are multiple ways of doing that: you can use our R function (see below), [this online tool](https://shiny.obis.org/mpaeutools), or Python `pandas` library. If you downloaded your data through the [maps platform](https://shiny.obis.org/distmaps), then files are already in `.csv` format.\n\n### Loading predictions\n\n::: {.panel-tabset}\n\n## R\n\nThe easiest way to work with raster (GeoTIFF) files on R is using the `terra` package (alternatively, you can work with package `stars`).\n\nWe will run examples for the species with taxonID 135185 with results stored in a folder called `results`. To open a single prediction:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(terra)\n\ncurrent <- rast(\"files/results/taxonid=135185/model=mpaeu/predictions/taxonid=135185_model=mpaeu_method=maxent_scen=current_cog.tif\")\n\ncurrent\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nclass       : SpatRaster \ndimensions  : 3600, 7200, 1  (nrow, ncol, nlyr)\nresolution  : 0.05, 0.05  (x, y)\nextent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax)\ncoord. ref. : lon/lat WGS 84 (EPSG:4326) \nsource      : taxonid=135185_model=mpaeu_method=maxent_scen=current_cog.tif \nname        : current \n```\n\n\n:::\n\n```{.r .cell-code}\nplot(current)\n```\n\n::: {.cell-output-display}\n![](datause_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\nAll predictions folders always include a `mask` file. Let's also open this file:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmask_file <- rast(\"files/results/taxonid=135185/model=mpaeu/predictions/taxonid=135185_model=mpaeu_mask_cog.tif\")\n\nmask_file\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nclass       : SpatRaster \ndimensions  : 3600, 7200, 6  (nrow, ncol, nlyr)\nresolution  : 0.05, 0.05  (x, y)\nextent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax)\ncoord. ref. : lon/lat WGS 84 (EPSG:4326) \nsource      : taxonid=135185_model=mpaeu_mask_cog.tif \nnames       : nativ~gions, fit_e~gions, fit_region, convex_hull, minbo~ircle, buffer100m \n```\n\n\n:::\n\n```{.r .cell-code}\nplot(mask_file$native_ecoregions)\n```\n\n::: {.cell-output-display}\n![](datause_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n## QGIS\n\nOpen the file on QGIS clicking on the `Open data source manager` on the corner. Chose the raster file you want to open and click ok.\n\n![how-to-1](images/how_to/qgis_1.png)\n\nOnce opened, click with the right button on the layer and click in properties.\n\n![how-to-2](images/how_to/qgis_2.png)\n\nThen, on the `Symbology` tab change render type to 'Singleband pseudocolor', chose the color ramp and click ok.\n\n![how-to-3](images/how_to/qgis_3.png)\n\nAll predictions folders always include a `mask` file. Let's also open this file. The `mask`file is a multiband raster, with each band being a different mask. You can click with the right button, enter in properties and chose to visualize only one of the bands. Use the \"Paletted/Unique values\" option to color this layer (0/1).\n\n![how-to-4](images/how_to/qgis_4.png)\n\n:::\n\n### Applying masks and converting to binary\n\nPredictions show the relative suitability of a place, in terms of its environmental conditions. However, predictions are made to the whole globe, including areas which may not be reachable by the species. Thus, it is always advisable to mask the predictions by one of the masks provided (or you can create one based on your hypothesis). In this case, we will use the realms in which the species occurs today (what we assume to be the \"native area\" of the species).\n\n::: {.panel-tabset}\n\n## R\n\nOn R, the first step is to convert the 0 values (negative mask) to `NA` values, as necessary by the function. Then we apply the target mask to our prediction:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmask_file[mask_file == 0] <- NA\n\ncurrent <- mask(current, mask_file$native_ecoregions)\nplot(current, main = \"Native area mask\")\n```\n\n::: {.cell-output-display}\n![](datause_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n## QGIS\n\nSoon...\n\n:::\n\nNow that we masked the prediction, we may want to limit it to only areas that are more likely to have the species according to a certain threshold. Ideally, you should always work with **continuous** predictions, but in some cases a **binary** map (presence/absence of species) may be desirable. We will also load the occurrence data to show how the mode influences our view of suitable areas.\n\n::: {.panel-tabset}\n\n## R\n\nOn R, we start by loading the occurrence data and the table with thresholds. Here we will apply the P10 threshold, which removes all values lower than the 10th percentile of values in the occurrence records.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(arrow)\n\nrecords <- read_parquet(\"files/results/taxonid=135185/model=mpaeu/taxonid=135185_model=mpaeu_what=fitocc.parquet\")\n\nthresholds <- read_parquet(\"files/results/taxonid=135185/model=mpaeu/metrics/taxonid=135185_model=mpaeu_what=thresholds.parquet\")\n\np10 <- thresholds$p10[thresholds$model == \"maxent\"]\n```\n:::\n\n\n\n\n\n\nAnd then we apply the threshold to the map. We will do the two modes: the first simply remove areas below the threshold and the second actually converts in binary format.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create copies\nth_removed <- current\nth_binary <- current\n\n# Apply thresholds\nth_removed[th_removed < p10] <- 0\n\nth_binary[th_binary < p10] <- 0\nth_binary[th_binary > 0] <- 1\n\n# Plot\npar(mfrow = c(2,1))\nplot(th_removed, main = \"Lower values removed\")\npoints(records, pch = 20, cex = .5)\n\nplot(th_binary, main = \"Binary\")\npoints(records, pch = 20, cex = .5)\n```\n\n::: {.cell-output-display}\n![](datause_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n## QGIS\n\nSoon...\n\n:::",
    "supporting": [
      "datause_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"site_libs/jsoneditor-0.18.7/jsoneditor.min.js\"></script>\n<script src=\"site_libs/jsonedit-binding-4.0.0/jsonedit.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}